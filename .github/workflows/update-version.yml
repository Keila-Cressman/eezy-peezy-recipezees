name: Auto update package version to date

on:
  push:
    branches:
      - master

jobs:
  update-version:
    name: Update package.json version to YYYY.MM.DD.NN
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set DATE (UTC YYYY.MM.DD)
        id: set_date
        run: echo "DATE=$(date -u +%Y.%m.%d)" >> $GITHUB_ENV

      - name: Compute daily counter and set VERSION (YYYY.MM.DD.NN)
        id: compute_version
        run: |
          # Count previous workflow commits that set today's version and compute next index
          DATE="$DATE"
          # Search commit bodies for the exact chore message we use when committing the version
          COUNT=$(git --no-pager log --pretty=%B --all --grep="chore: set version to ${DATE}" | wc -l | tr -d ' ')
          NEXT=$((COUNT + 1))
          PAD=$(printf "%02d" "$NEXT")
          VERSION="${DATE}.${PAD}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Found ${COUNT} previous version commits for ${DATE}, next is ${PAD}"

      - name: Ensure Node.js is available
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update package.json version if different
        run: |
          node -e "const fs=require('fs');const p='package.json';const pkg=JSON.parse(fs.readFileSync(p)); if(pkg.version===process.env.VERSION){console.log('version already',process.env.VERSION); process.exit(0);} pkg.version=process.env.VERSION; fs.writeFileSync(p,JSON.stringify(pkg,null,2)+'\n'); console.log('updated package.json to',process.env.VERSION);"

      - name: Commit and push changes (if any)
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit"
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: set version to $VERSION [skip ci]"
          git push
