name: Auto update package version to date

on:
  push:
    branches:
      - master

jobs:
  update-version:
    name: Update package.json version to YYYY.MM.DD.NN
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set DATE (UTC YYYY.MM.DD)
        id: set_date
        run: echo "DATE=$(date -u +%Y.%m.%d)" >> $GITHUB_ENV

      - name: Compute daily counter and set VERSION (YYYY.MM.DD.NN)
        id: compute_version
        run: |
          # Compute next daily index by reading current package.json version (if any)
          # This avoids counting commits and prevents accidental double increments.
          DATE="$DATE"
          VERSION_CURRENT=""
          if [ -f package.json ]; then
            VERSION_CURRENT=$(node -e "try{const fs=require('fs');const pkg=JSON.parse(fs.readFileSync('package.json')); console.log(pkg.version||'');}catch(e){}")
          fi
          # If current version matches today's date, extract NN and increment by 1. Otherwise start at 01.
          if echo "${VERSION_CURRENT}" | grep -q "^${DATE}\."; then
            # Extract the fourth dot-separated field (NN), strip leading zeros
            CUR_NN=$(echo "${VERSION_CURRENT}" | awk -F. '{print $4}' | sed 's/^0*//')
            if [ -z "${CUR_NN}" ]; then CUR_NN=0; fi
            NEXT=$((CUR_NN + 1))
          else
            NEXT=1
          fi
          PAD=$(printf "%02d" "$NEXT")
          VERSION="${DATE}.${PAD}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Current package.json version: ${VERSION_CURRENT}; next is ${VERSION}"

      - name: Ensure Node.js is available
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update package.json version if different
        run: |
          node -e "const fs=require('fs');const p='package.json';const pkg=JSON.parse(fs.readFileSync(p)); if(pkg.version===process.env.VERSION){console.log('version already',process.env.VERSION); process.exit(0);} pkg.version=process.env.VERSION; fs.writeFileSync(p,JSON.stringify(pkg,null,2)+'\n'); console.log('updated package.json to',process.env.VERSION);"

      - name: Commit and push changes (if any)
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit"
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: set version to $VERSION [skip ci]"
          git push
